{"version":3,"sources":["components/table.js","App.js","index.js"],"names":["Table","props","useState","titleInput","setTitleInput","title","setTitle","data","setData","className","map","items","index","type","value","onChange","e","newTitle","target","handleTitleChange","placeholder","onClick","includes","Object","keys","item","defaultValue","defaultProps","App","name","age","address","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAEcA,EAAQ,SAACC,GACnB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA0BF,mBAASD,EAAMI,OAAzC,mBAAOA,EAAP,KAAcC,EAAd,KAEA,EAAwBJ,mBAASD,EAAMM,MAAvC,mBAAOA,EAAP,KAAaC,EAAb,KAgBA,OACI,mCACA,sBAAKC,UAAU,aAAf,UACI,sBAAKA,UAAU,eAAf,UACKJ,EAAMK,KAAI,SAACC,EAAOC,GACf,OACI,uBAAOC,KAAK,OAAOJ,UAAU,qBAAiCK,MAAOH,EAAOI,SAAU,SAACC,GAAD,OAbhF,SAACA,EAAEJ,GACzB,IAAMK,EAAQ,YAAOZ,GACrBY,EAASL,GAASI,EAAEE,OAAOJ,MAC3BR,EAASW,GAUoGE,CAAkBH,EAAEJ,KAA1DA,MAG/D,uBACIH,UAAU,qBACVI,KAAK,OACLO,YAAY,gBACZN,MAAQX,EACRY,SAAU,SAACC,GAAD,OAAOZ,EAAcY,EAAEE,OAAOJ,UAE5C,wBACIL,UAAU,aACVY,QAAS,SAACL,GAAD,OAAwBA,EAAEE,OAAOJ,WA/BnC,KAAfX,GAAqBE,EAAMiB,SAASnB,IAGxCG,EAAS,GAAD,mBAAKD,GAAL,CAAYF,OA0BZ,0BAMJ,qBAAKM,UAAU,aAAf,SACKc,OAAOC,KAAKjB,GAAMG,KAAI,SAACC,EAAOC,GAC3B,OACI,qBAAKH,UAAU,iBAAf,SACKJ,EAAMK,KAAI,SAACe,EAAMb,GACd,OACI,uBACIC,KAAK,OACLJ,UAAU,kBAEViB,aAAcnB,EAAKI,GAAOc,IADrBb,OANgBA,QAejD,wBAAQH,UAAU,aAAaY,QAAS,kBAAKb,EAAQ,GAAD,mBAAKD,GAAL,CAAU,OAA9D,2BAQZP,EAAM2B,aAAe,CACjBtB,MAAO,GACPE,KAAM,ICnDKqB,MAlBf,WAOE,OACE,sBAAKnB,UAAU,MAAf,UACE,4CACA,cAAC,EAAD,CAAOJ,MAAO,GAAIE,KAAM,KACxB,uBACA,iDACA,cAAC,EAAD,CAAOF,MAZS,CAAC,OAAO,MAAM,WAYHE,KAXZ,CACjB,CAACsB,KAAK,OAAOC,IAAI,GAAGC,QAAQ,YAC5B,CAACF,KAAK,QAAQC,IAAI,GAAGC,QAAQ,UAC7B,CAACF,KAAK,OAAOC,IAAI,GAAGC,QAAQ,gBCHhCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bf9ab65f.chunk.js","sourcesContent":["import { useState } from \"react\"\n\n export const Table = (props) => {\n    const [titleInput, setTitleInput] = useState(\"\")\n    const [title, setTitle] = useState(props.title) \n   \n    const [data, setData] = useState(props.data)\n\n    const handleTitleInput = (e) => {\n        if( titleInput === \"\" || title.includes(titleInput) ){\n            return  \n        }\n        setTitle([...title, titleInput])\n    }\n\n    const handleTitleChange = (e,index) => {\n        const newTitle = [...title]\n        newTitle[index] = e.target.value\n        setTitle(newTitle)\n    }\n\n\n    return (\n        <>\n        <div className=\"table-cont\">\n            <div className=\"table-header\">\n                {title.map((items, index) => {\n                    return(\n                        <input type='text' className=\"table-header-title\" key={index} value={items} onChange={(e) => handleTitleChange(e,index)}/>\n                    )\n                })}\n                <input \n                    className=\"header-title-input\" \n                    type=\"text\" \n                    placeholder=\"Add new field\" \n                    value= {titleInput} \n                    onChange={(e) => setTitleInput(e.target.value)} \n                />\n                <button \n                    className=\"add-button\"\n                    onClick={(e) => handleTitleInput(e.target.value)}\n                >Add Field</button>\n            </div>\n\n            <div className=\"table-body\">\n                {Object.keys(data).map((items, index) => {\n                    return (\n                        <div className=\"table-body-row\" key={index}>\n                            {title.map((item, index) => {\n                                return(\n                                    <input \n                                        type=\"text\" \n                                        className=\"table-body-cell\" \n                                        key={index} \n                                        defaultValue={data[items][item]} \n                                    />\n                                )\n                            })}\n                        </div>\n                    )\n                })}\n            </div>\n            <button className=\"add-button\" onClick={()=> setData([...data,{}])}>Add row</button>\n        </div>\n        </>\n    )\n\n}\n\n\nTable.defaultProps = {\n    title: [],\n    data: {}\n}","import './App.css';\nimport {Table} from './components/table'\n\nfunction App() {\n  const data1_title = [\"name\",\"age\",\"address\"]\n  const data1_data = [\n    {name:\"John\",age:10,address:\"New York\"},\n    {name:\"Peter\",age:20,address:\"London\"},\n    {name:\"Mary\",age:30,address:\"Paris\"},\n  ]\n  return (\n    <div className=\"App\">\n      <p>Empty table</p>\n      <Table title={[]} data={[]} />\n      <br/>\n      <p>Table with props</p>\n      <Table title={data1_title} data={data1_data} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}